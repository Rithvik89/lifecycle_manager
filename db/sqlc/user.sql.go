// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: user.sql

package db

import (
	"context"
)

const getMutual = `-- name: GetMutual :many
SELECT network1.follows
from networks as network1
WHERE network1.user IN (
        SELECT network2.follows
        from networks as network2
        WHERE network2.user = ?
    )
`

func (q *Queries) GetMutual(ctx context.Context, user int32) ([]int32, error) {
	rows, err := q.query(ctx, q.getMutualStmt, getMutual, user)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []int32{}
	for rows.Next() {
		var follows int32
		if err := rows.Scan(&follows); err != nil {
			return nil, err
		}
		items = append(items, follows)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
