name: Build LCM

on:
  push:
    branches: ["stage"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - run: npm install -g typescript
      - run: make lcm
      - name: SSH and resolve
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            
            #Now we have got the access of EC2 and we will start the deploy .
            export NVM_DIR="/home/ubuntu/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            pm2 delete lcm
          '
      - name: SCP and Copy code
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key -r ./app ${USER_NAME}@${HOSTNAME}:/home/ubuntu/lcm
      - name: SSH and resolve
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            
            #Now we have got the access of EC2 and we will start the deploy .
            make make deploy_lcm
          '
